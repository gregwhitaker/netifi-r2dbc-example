import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

plugins {
    id 'java'
    id 'application'
    id 'org.springframework.boot'
    id 'com.google.protobuf'
    id 'com.bmuschko.docker-remote-api' version '3.4.4'
}

dependencies {
    protobuf project(':product-service-idl')

    implementation 'com.netifi:netifi-spring-boot-starter'
}

mainClassName = 'example.service.product.ProductServiceApplication'

// Packaging
task buildImage(type: DockerBuildImage, dependsOn: build) {
    buildArgs = ['JAR_FILE': "${bootJar.archiveName}"]
    dockerFile = file("${projectDir}/Dockerfile")
    inputDir = file("${projectDir}")
    tags = ["netifi-r2dbc-example/${projectDir.name}", "netifi-r2dbc-example/${projectDir.name}:${version}"]
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc'
    }
    plugins {
        rsocketRpc {
            artifact = 'io.rsocket.rpc:rsocket-rpc-protobuf'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                rsocketRpc {}
            }
        }
    }
}
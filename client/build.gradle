import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

plugins {
    id "java"
    id "application"
    id "org.springframework.boot"
    id "com.google.protobuf"
    id "com.bmuschko.docker-remote-api"
}

mainClassName = 'example.client.ClientApplication'

dependencies {
    protobuf project(':product-service-idl')

    implementation 'com.netifi:netifi-spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'io.projectreactor:reactor-test'
}

// Test
test {
    useJUnitPlatform()
}

// Packaging
task buildImage(type: DockerBuildImage, dependsOn: build) {
    buildArgs = ['JAR_FILE': "${bootJar.archiveName}"]
    dockerFile = file("${projectDir}/Dockerfile")
    inputDir = file("${projectDir}")
    tags = ["netifi-r2dbc-example/${projectDir.name}", "netifi-r2dbc-example/${projectDir.name}:${version}"]
}

// RSocket RPC
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc'
    }
    plugins {
        rsocketRpc {
            artifact = 'io.rsocket.rpc:rsocket-rpc-protobuf'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                rsocketRpc {}
            }
        }
    }
}
